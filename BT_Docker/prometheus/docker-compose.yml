version: '3.1'

services:
 influxdb:
   image: influxdb:latest
   container_name: influxdb
   ports:
     - "8083:8083"
     - "8086:8086"
     - "8090:8090"
   volumes:
     - influxdb-storage:/var/lib/influxdb
   environment:
     - DOCKER_INFLUXDB_INIT_MODE=setup
     - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
     - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
     - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
     - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
     - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
   network_mode: "bridge"
      
 prometheus:
   image: prom/prometheus:latest
   container_name: prometheus
   hostname: prometheus
   restart: always
   volumes:
     - ./prometheus.yml:/etc/prometheus/prometheus.yml
   command:
     - '--config.file=/etc/prometheus/prometheus.yml'
     - '--web.external-url=http://localhost/prometheus'
   ports:
     - "9090:9090"
   environment:
     - PROMETHEUS_ADMIN_USER=${PROMETHEUS_USERNAME}
     - PROMETHEUS_ADMIN_PASSWORD=${PROMETHEUS_PASSWORD}
   network_mode: "bridge"

 node-exporter:
   image: quay.io/prometheus/node-exporter:latest
   container_name: node-exporter
   hostname: node-exporter
   restart: always
   ports:
     - "9100:9100"
   network_mode: "bridge"
   
 grafana:
   image: grafana/grafana:latest
   container_name: grafana
   hostname: grafana
   restart: always
   ports:
     - "3000:3000"
   volumes:
     - grafana-storage:/var/lib/grafana
     - ./grafana-provisioning/:/etc/grafana/provisioning/
   depends_on:
     - prometheus
   environment:
     - GF_USERS_ALLOW_SIGN_UP=true
     - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
     - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
     - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
     - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
     - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
   network_mode: "bridge"   
    
volumes:
  influxdb-storage:
  grafana-storage: